

----Difference between IQueryable and IEnumerable 
Both are used for data manipulations in LINQ from databases and as well as collections
IEnumberable is present in System.Collections.namespace , IEnumberable is suitable for in-memory datatypes like Arrays, collections ..
When querying using IEnumberable , select operation is done on Server side and loads the data into in-memory on the client side and then applies the filter (most of the job is done on client side). Ienumberable is benificial for linq to object and linq to xml queries.

Iqueryable is present in System.Linq , it is best suitable when querying from out-memory like databases and services 
when querying using Iqueryable , IQuerable executes select on server side along with the filters and other calcuations required .Iqueryable is benificial for linq to sql queries


----Difference between Finalize and Dispose
Finalize is GC method which is called before an object that is eligible for collection is reclaimed. It is called by runtime. This removes all unsed memory and other data once it is completed

Dispose is something that need to be manually triggeed to clear the objects for those not maintained in Finalize (GC) like DB connections, network connections,File instance etc... In order to dispose those methods it is best to implement IDisposeable and override the Dispose() method.


----DependencyInjection
DependencyInjection is design pattern in which making classes loosly coupled. It helps in creation of dependent objects outside of class and provides those objects at runtime in different ways. 3 ways --> Constructor Injection , Method injection and property Injection


----Difference between threading and task
Thread is an small set of executable instructions where as task lets you to create an task and run it asynchornusly and get the status of the task if it returns an resuts then the task gives the result. Task can be cancelled using cancellation token.


---?? (null-coalescing operator)and ??= (null coalescing assignment operator)
?? --> evalutes the lefthand operand and returns the value if it not null and if it is null then evalutes the righthand operand and returns its result.
??= --> assign the value of right hand operand if the left hand operand is evaluted as null


--- Difference of functions and procs in SQL 
Functions are execution of set of statements where it is complied and executed everytime it is called where as in procs it is compiled once and executed everytime it is called
Functions can have one input paras and return values where as procs can have input and output params as well as return value
Functions should return a value where proc is optional 
Functions can be used in select statements where as procs cannot 
Functions cannot have transactions where as procedures can have transactions
Exception handling is possible in procs but not in functions

---Triggers in SQL 
There are 4 different types of triggers DDL \ DML \ CLR \ Logon triggers
DDL   --> happened on Create / Alter / Drop  
DML   --> happened on Insert/ update / delete
CLR   --> 
Logon -->

---Indexes in SQL
Indexing is used to optimize the performance of DB by minimizing the no of disk accesses required when query is processed. 
There are multiple types of indexes like clustered index, non-clustered index, unique index, filtered index, columnstore index, hash index.

---What is merge statement in SQL 
Merge is combination Select/INSERT/UPDATE/DELETE in single query instead of multiple. It choses Target and Source as well as matching conditions and then identify what to do.



---WebServices
asmx and asmx.cs are the file names for webservices

--How exceptions are handled in WebAPI
Exceptions happened during runtime will be handled by HTTPResponseException
500 - server errors 
400 - client errors
300 - Redirect erros 
200 - Successfull responses
100 - Information responses


---Authorization and Authentication
AuthorizationFilterAttribute is used to achive authorization in webapi 
Can be authenticated using tokes, header information


---REST
Rest stands for representational state transfer. Bascis priniciple to be considered for RESTful API --> Client-server atchitecture , statelesssness , cachebility, layered system and uniform interface. It is an architectural pattern for echanging data over distrubuted environment
Asp.Net Web API is a framework that makes it easy to build 
Bearer Authentication in Web API --> it is toaken based authentication (Scalabilit of servers, loosley co .....)
Routing in webAPI is process of matching incoming http request to controller methods, there are 2 types : Coventional type of routing and attribute routing (used like attributes).
WEBAPI filters are attributes that are decorated over methods or controllers which are executed before or after the action methods.(IFilter is interface used for that). Different types of filters are simple/Authorization/authentication/exceptions/action




---Middleware 
Middlewares are available as nuget packages
middleware is software components that are assembled into an application pipeline to handle requests and responses. Each component chooses whether to pass the execution to next components for further processing
Middleware are executed in sequence it is created 
In Asp.Net if we use Termainal method( like Run) it will not process the next middleware, if we use (Use method) then it will go the next middleware
To render static files all the static files should be present in wwwroot folder


---Dotnet core 
The Startup class is mandatory and it is the entry point of the application. With the help of this class we can configure the environment in our ASP.net Core application. We can use Constructor and two different methods: ConfigureServices and Configure for setting up the environment. This class creates services and injects services as dependencies so the rest of the application can use these dependencies. The ConfigureServices used to register the service and Configure method allow us to add middleware and services to the HTTP pipeline. This is the reason ConfigureServices method calls before Configure method 
configureservice is not a mandatory classÂ 


---Web
Caching: Caching is a technique which sotres something in memory that is being used frequently to provide better performance. in asp.net mvc output cache attribute is used for applying caching. if another request comes in specificed time interval then it will return it from cache result instead of executing the controller.
OutputCache(Duration=60, VaryByParam="parameter", location=OutputCacheLocation.Client/Server/ClientAndServer
Cache profile can be defined in web.config and refered in controller


